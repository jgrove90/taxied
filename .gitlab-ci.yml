image: python:latest

services:
  - docker:dind

variables:
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  IMAGE_NAME: taxied
  # AWS_DEFAULT_REGION: us-west-2
  # AWS_ACCOUNT_ID: $AWS_ACCOUNT_ID
  # AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
  # AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
  # SONAR_URL: $SONAR_URL
  # SONAR_LOGIN: $SONAR_LOGIN

stages:
  - test
  - analyze
  - build
  - deploy

pyest:
  stage: test
  script:
    - pip install -r requirements.txt
    - pytest

# sonarqube:
#     stage: test
#     script:
#         - sonar-scanner -Dsonar.host.url=$SONAR_URL -Dsonar.login=$SONAR_LOGIN

# trivy:
#     stage: analyze
#     script:
#         - docker pull aquasec/trivy
#         - docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image --severity HIGH,CRITICAL $IMAGE_NAME

# build:
#   stage: build
#   script:
#     - docker build -t $IMAGE_NAME .

# deploy:
#   stage: deploy
#   before_script:
#     - apk add --no-cache python3 py3-pip python3-dev
#     - pip3 install awscli
#   script:
#     - eval $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
#     - docker tag $IMAGE_NAME $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_NAME:latest
#     - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_NAME:latest