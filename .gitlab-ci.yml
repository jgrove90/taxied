image: docker:latest

services:
  - docker:dind

variables:
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  IMAGE_NAME: taxied
  IMAGE_TAG: $CI_COMMIT_SHA
  AWS_DEFAULT_REGION: us-west-2
  AWS_ACCOUNT_ID: $AWS_ACCOUNT_ID
  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
  # SONAR_URL: $SONAR_URL
  # SONAR_LOGIN: $SONAR_LOGIN

stages:
  - build
  - test
  - scan
  - deploy

build:
  stage: build
  script:
    - echo $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - docker build -t $IMAGE_NAME:$IMAGE_TAG .
    - docker push $IMAGE_NAME:$IMAGE_TAG

pyest:
  stage: test
  script:
    - docker pull $IMAGE_NAME:$IMAGE_TAG
    - docker run $IMAGE_NAME:$IMAGE_TAG pytest

# sonarqube:
#     stage: test
#     script:
#         - sonar-scanner -Dsonar.host.url=$SONAR_URL -Dsonar.login=$SONAR_LOGIN

trivy:
    stage: scan
    script:
      - docker pull $IMAGE_NAME:$IMAGE_TAG
      - docker pull aquasec/trivy
      - docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image --severity HIGH,CRITICAL $IMAGE_NAME:$IMAGE_TAG

# deploy:
#   stage: deploy
#   before_script:
#     - apk add --no-cache python3 py3-pip python3-dev
#     - pip3 install awscli
#   script:
#     - eval $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
#     - docker tag $IMAGE_NAME $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_NAME:latest
#     - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_NAME:latest